// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// CCEFrameInSoundproofCottonGenerationCmd.cpp
// The state chart based command: CCEFrameInSoundproofCottonGenerationCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Feb 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "CCEFrameInSoundproofCottonGenerationCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"
CATCreateClass( CCEFrameInSoundproofCottonGenerationCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
CCEFrameInSoundproofCottonGenerationCmd::CCEFrameInSoundproofCottonGenerationCmd() :
  CATStateCommand ("CCEFrameInSoundproofCottonGenerationCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
{
	_Panel = new CCEFrameInSoundproofCottonGenerationDlg();
	_Panel->Build();
	_Panel->SetVisibility(CATDlgShow);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
CCEFrameInSoundproofCottonGenerationCmd::~CCEFrameInSoundproofCottonGenerationCmd()
{
	if (_Panel != NULL) 
	{
		_Panel->RequestDelayedDestruction();
		_Panel = NULL;
	}
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void CCEFrameInSoundproofCottonGenerationCmd::BuildGraph()
{

	AddAnalyseNotificationCB(_Panel, 
		_Panel->GetDiaOKNotification(),
		(CATCommandMethod)&CCEFrameInSoundproofCottonGenerationCmd::ActionOne,
		NULL);

	AddAnalyseNotificationCB (_Panel, 
		_Panel->GetWindCloseNotification(),
		(CATCommandMethod)&CCEFrameInSoundproofCottonGenerationCmd::CancelAction,
		NULL);

	AddAnalyseNotificationCB (_Panel, 
		_Panel->GetDiaCANCELNotification(),
		(CATCommandMethod)&CCEFrameInSoundproofCottonGenerationCmd::CancelAction,
		NULL);

	AddAnalyseNotificationCB (_Panel, 
		_Panel->GetDiaCLOSENotification(),
		(CATCommandMethod)&CCEFrameInSoundproofCottonGenerationCmd::CancelAction,
		NULL);

}


//-------------------------------------------------------------------------
// ActionOne ()
//-------------------------------------------------------------------------
CATBoolean CCEFrameInSoundproofCottonGenerationCmd::ActionOne( void *data )
{
  // TODO: Define the action associated with the transition 
  // ------------------------------------------------------

	RequestDelayedDestruction();
	if (_Panel != NULL) 
	{
		_Panel->RequestDelayedDestruction();
		_Panel= NULL;
	}
	return TRUE;
}

CATBoolean CCEFrameInSoundproofCottonGenerationCmd::CancelAction(void *data)
{
	cout<< " CancelAction "<<endl;
	RequestDelayedDestruction();
	if (_Panel != NULL) 
	{
		_Panel->RequestDelayedDestruction();
		_Panel= NULL;
	}
	return TRUE;
}
